/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package managers;

import com.nitdlibrary.AddBook;
import com.nitdlibrary.EditBook;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import com.nitdlibrary.NITDLibrary;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author MAYANK
 */
public class LocationManager extends javax.swing.JFrame {
    Connection library ;
    AddBook caller;
    EditBook callerBook;
    int callerFlag; // 0 for AddBook , 1 for EditBook paramter constructors
    /**
     * Creates new form LocationManager
     */
    public LocationManager() {
        initComponents();
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        sendToAddBookButton.setVisible(false);
        updateList();
        try {
            library = NITDLibrary.createConnection();
        } catch (Exception ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e)
            {
                dispose();
            }
        });
    }
    /**
     * SETS caller.location String value
     * @param caller 
     */
    public LocationManager(final AddBook caller) {
        initComponents();
        callerFlag = 0;
        this.caller = caller;
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        updateList();
        try {
            library = NITDLibrary.createConnection();
        } catch (Exception ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosing(WindowEvent e) {
        //     caller.setLocation(locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString()); 
            setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
             dispose();
            
            }
        });
    }
    /**
     * SETS caller.location String value FOR EDITBOOK.JAVA
     * @param caller 
     */
    public LocationManager(final EditBook caller) {
        initComponents();
        this.callerBook = caller;
        callerFlag = 1;
        sendToAddBookButton.setText("Send to Edit Book Form");
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        updateList();
        try {
            library = NITDLibrary.createConnection();
        } catch (Exception ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.addWindowListener(new WindowAdapter(){
        @Override
        public void windowClosing(WindowEvent e) {
            // caller.setLocation(locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString()); 
            setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
             dispose();
            
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        locationList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        makeChangesButton = new javax.swing.JButton();
        changeLocationText = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        addLocationText = new javax.swing.JTextField();
        sendToAddBookButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("LOCATION MANAGER");

        locationList.setModel(new DefaultListModel());
        locationList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        locationList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                locationListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(locationList);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Change and Re-Factor"));

        makeChangesButton.setText("Make Changes");
        makeChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeChangesButtonActionPerformed(evt);
            }
        });

        changeLocationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeLocationTextActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(makeChangesButton)
                .addGap(18, 18, 18)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(changeLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(changeLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeChangesButton)
                    .addComponent(deleteButton))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Add New Location"));

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(addButton)
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addLocationText)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(addLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(addButton)
                .addContainerGap())
        );

        sendToAddBookButton.setText("Send to Add Book Form");
        sendToAddBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToAddBookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sendToAddBookButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendToAddBookButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeLocationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeLocationTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeLocationTextActionPerformed

    private void locationListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_locationListMouseClicked
        String selectedItem = locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString();
        changeLocationText.setText(selectedItem);
    }//GEN-LAST:event_locationListMouseClicked

    private void makeChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeChangesButtonActionPerformed
        try {
            String location = locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString();
            int index = locationList.getSelectedIndex();
            DefaultListModel model = (DefaultListModel) locationList.getModel();
            model.add(locationList.getSelectedIndex(), changeLocationText.getText());
            model.remove(index+1);
            locationList.setModel(model);
            updateFile();
            updateList();
            /**
             * REFACTORING BOOKS TABLE
             */
            PreparedStatement query = library.prepareStatement("update books set location = ? where location = ?");
           
            query.setString(2,location);
            query.setString(1,changeLocationText.getText());
            int executeUpdate = query.executeUpdate();
            System.out.println("Number of locations changed in books table : " + executeUpdate);
        } catch (SQLException ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        
    }//GEN-LAST:event_makeChangesButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
           // File test = new File("sample.txt");
           // System.out.println(test.getAbsolutePath());
            FileWriter newLocation = new FileWriter("Locations.txt",true);
            newLocation.write(addLocationText.getText() + "\n");
            newLocation.close();
            updateList();
        } catch (IOException ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            String location = locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString();
            if(JOptionPane.showConfirmDialog(null, "Deleting a location will lead data loss.Are you sure you want to Continue?", "Warning", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
            {
                /**
                 * Using Config class
                 */
                boolean cont = Config.showDeleteDialog();
                if(cont==true)
                {
                DefaultListModel model= (DefaultListModel)locationList.getModel();
            model.remove(locationList.getSelectedIndex());
            updateFile();
            changeLocationText.setText(null);
            /**
             * REFACROTING BOOKS TABLE
             */
            PreparedStatement query = library.prepareStatement("update books set location = '' where location = ?");
            
            query.setString(1,location);
            query.executeUpdate();
            JOptionPane.showMessageDialog(null,"Location successfully removed", "Location Deleted",JOptionPane.OK_OPTION);
            
            }
            else
            {
            JOptionPane.showMessageDialog(null, "Wrong Password Entered. Try Again? (final attempt) ","Wrong Password",JOptionPane.OK_OPTION);
            }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void sendToAddBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToAddBookButtonActionPerformed
        if(callerFlag ==0)
        {
        caller.setLocation(locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString());
        dispose();
        }
        else if(callerFlag ==1)
        {
        callerBook.setLocation(locationList.getModel().getElementAt(locationList.getSelectedIndex()).toString());
        dispose();
        }
    }//GEN-LAST:event_sendToAddBookButtonActionPerformed
    /**
     * Refresh the list after reloading the text file
     */
    private void updateList()
    {
        
            FileReader locations = null;
            BufferedReader textReader ;
            String location;
            try {
                locations = new FileReader("Locations.txt");
                textReader = new BufferedReader(locations);
                DefaultListModel model = new DefaultListModel();
                for(int i=0;(location = textReader.readLine())!=null;i++)
                {
                model.add(i,location);
                }
                locationList.setModel(model);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
       
    }
    /**
     * EXTRACT LIST MODEL AND RE-WRITE FILE. FIRST OPEN THE FILE AND WRITE "" . THEN OPEN AGAIN AND APPEND THE LIST MODEL.
     */
    private void updateFile()
    {
        FileWriter file = null;
        String location= null;
        try {
            file = new FileWriter("Locations.txt");
            file.write("");
            file.close();
            file = new FileWriter("Locations.txt",true);
            ListModel model = locationList.getModel();
            for(int i=0;i<locationList.getModel().getSize();i++)
            {
                System.out.println("chala" + i);
                location = locationList.getModel().getElementAt(i).toString();
                file.write(location + "\n");
            }
        } catch (IOException ex) {
            Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                file.close();
            } catch (IOException ex) {
                Logger.getLogger(LocationManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    /**
     * THIS IS CALLED EXTERNALLY AND RETURNS WITH THE LOCATION SELECTED IN LIST
     */
    public static String setLocationFromManager()
    {
        LocationManager manager = new LocationManager();
        return manager.locationList.getModel().getElementAt(manager.locationList.getSelectedIndex()).toString();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LocationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LocationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LocationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LocationManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LocationManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addLocationText;
    private javax.swing.JTextField changeLocationText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList locationList;
    private javax.swing.JButton makeChangesButton;
    private javax.swing.JButton sendToAddBookButton;
    // End of variables declaration//GEN-END:variables
}
